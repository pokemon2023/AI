#Q.1) Write a python program to generate Calendar for the given month and year?. 
import calendar

year = int(input("Enter the year: "))
month = int(input("Enter the month (1-12): "))

cal = calendar.monthcalendar(year, month)

print(f"Calendar for {calendar.month_name[month]} {year}:\n")
print(" Mo Tu We Th Fr Sa Su")

for week in cal:
    print(" ".join(f"{day:2}" if day != 0 else "   " for day in week))

O.P:-
Enter the year: 2023
Enter the month (1-12): 12
Calendar for December 2023:

 Mo Tu We Th Fr Sa Su
                 1  2  3
 4  5  6  7  8  9 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30 31

_________________________________________________________________
#Q2.Write a Python program to implement Depth First Search algorithm. Refer the following graph as an Input for the program.[Initial node=1,Goal node=7]. 
graph = {
    1: [2, 3],
    2: [4],
    3: [2],
    4: [5, 6],
    5: [3, 7],
    6: [],
    7: [6]
}

def dfs(current, goal, visited=None, path=None):
    visited = visited or set()
    path = path or []

    visited.add(current)
    path.append(current)

    if current == goal:
        return path

    for neighbor in graph[current]:
        if neighbor not in visited:
            new_path = dfs(neighbor, goal, visited, path)
            if new_path:
                return new_path

    path.pop()
    return None

# Specify initial and goal nodes
initial_node = 1
goal_node = 7

# Run DFS
result_path = dfs(initial_node, goal_node)

# Print the result
if result_path:
    print(f"Path from {initial_node} to {goal_node}: {result_path}")
else:
    print(f"No path found from {initial_node} to {goal_node}")
O/p:

Path from 1 to 7: [1, 2, 4, 5, 7]
 