#Q.1) Write a Python program to accept a string. Find and print the number of upper case alphabets and lower case alphabets.
def count_upper_lower(string):
    # Initialize counters
    upper_count = 0
    lower_count = 0

    # Iterate through each character in the string
    for char in string:
        # Check if the character is an uppercase alphabet
        if char.isupper():
            upper_count += 1
        # Check if the character is a lowercase alphabet
        elif char.islower():
            lower_count += 1

    # Print the results
    print("Number of uppercase alphabets:", upper_count)
    print("Number of lowercase alphabets:", lower_count)

# Get input from the user
user_input = input("Enter a string: ")

# Call the function with the user input
count_upper_lower(user_input)

O.p: 

Enter a string: frienD
Number of uppercase alphabets: 1
Number of lowercase alphabets: 5
__________________________________________________________

#Q2 .Write a computer program to play tic-tac-toe game. (Game Theory)
board = ["-", "-", "-",
"-", "-", "-",
"-", "-", "-"]
# Define a function to print the game board
def print_board():
    print(board[0] + " | " + board[1] + " | " + board[2])
    print(board[3] + " | " + board[4] + " | " + board[5])
    print(board[6] + " | " + board[7] + " | " + board[8])
# Define a function to print the game board
def print_board():
    print(board[0] + " | " + board[1] + " | " + board[2])
    print(board[3] + " | " + board[4] + " | " + board[5])
    print(board[6] + " | " + board[7] + " | " + board[8])
# Define a function to handle a player&#39;s turn
def take_turn(player):
    print(player + "s turn.")
    position = input("Choose a position from 1-9: ")
    while position not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]:
            position = input("Invalid input. Choose a position from 1-9: ")
    position = int(position) - 1
    while board[position] != "-":
            position = int(input("Position already taken. Choose a different position: ")) - 1
    board[position] = player
    print_board()
# Define a function to check if the game is over
def check_game_over():
    # Check for a win
    if (board[0] == board[1] == board[2] != "-") or \
    (board[3] == board[4] == board[5] != "-") or \
    (board[6] == board[7] == board[8] != "-") or \
    (board[0] == board[3] == board[6] != "-") or \
    (board[1] == board[4] == board[7] != "-") or \
    (board[2] == board[5] == board[8] != "-") or \
    (board[0] == board[4] == board[8] != "-") or \
    (board[2] == board[4] == board[6] != "-"):
        return "win"
    # Check for a tie
    elif "-" not in board:
        return "tie"
    # Game is not over
    else:
        return "play"
# Define the main game loop
def play_game():
    print_board()
    current_player = "X"
    game_over = False
    while not game_over:
        take_turn(current_player)
        game_result = check_game_over()
        if game_result == "win":
                print(current_player + " wins!")
                game_over = True
        elif game_result == "tie":
                print("Its a tie!")
                game_over = True
        else:
                # Switch to the other player
                current_player = "O" if current_player == "X" else "X"
# Start the game
play_game()

O.p:


- | - | -
- | - | -
- | - | -
Xs turn.
 